#
# \file Dockerfile.frontend
# \brief Dockerfile to create image for building and running a frontend application
#
# This Dockerfile implements a multi-stage build:
# - Uses Node.js Alpine image to install dependencies with pnpm and build the frontend
# - Creates a production image running the built app under a non-root user for security
#
# Exposes port 3000 for frontend service
#
# \date 10-09-2025
#

#
# BUILD
#
ARG NODE_VERSION=22.19-alpine

FROM node:$NODE_VERSION AS builder

RUN corepack enable && corepack prepare pnpm@10.12.4 --activate

WORKDIR /app

COPY package.json pnpm-lock.yaml ./

RUN pnpm install --frozen-lockfile

COPY . .

RUN pnpm build

#
# PRODUCTION
#
FROM node:$NODE_VERSION AS production

RUN addgroup -S app && adduser -S -G app app

WORKDIR /app

COPY --from=builder /app/package.json ./
COPY --from=builder /app/pnpm-lock.yaml ./
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public

RUN chown -R app:app /app

USER app

EXPOSE 3000

CMD ["pnpm", "start"]
